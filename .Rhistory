R fra 1993 er implementation af sproget S, som blev defineret tilbage i 1976 hos Bell Labs. R er open-source frigivet under GNU GPL licensen.
I 2015 købte Microsoft firmaet *Revolution Analytics*, som har lavet en specielt server udgave af R, som Microsoft har integeret med SQL Server 2016 og Azure platformen under navnet *Microsoft R Server* - Læs mere her: <a href="https://www.microsoft.com/en-us/sql-server/machinelearningserver" target="_blank">https://www.microsoft.com/en-us/sql-server/machinelearningserver</a>
setwd("~/GitHub/officegeek_excel_til_r")
library(tinytex)
setwd("~/GitHub/officegeek_excel_til_r")
install.packages("tinytex")
library(tinytex)
library(tinytex)
install.packages('tinytex')
install.packages("tinytex")
library(tinytex)
structure(list(BMI = c(26.97, 28.73, 25.34, 28.58, 23.1, 30.3,
33.11, 21.68, 26.36, 23.61, 22.91, 27.64, 26.31, 31.31, 22.35,
21.35, 22.37, 23.38, 23.24, 26.88, 21.59, 29.89, 34.17, 25.11,
21.96, 24.18, 26.59, 26.09, 32.8, 30.36, 28.15, 27.57, 23.62,
20.77, 18.59, 25.9, 24.71, 38.53, 28.09, 40.11, 28.93, 27.78,
26.87, 23.28, 25.09, 26.21, 21.51, 20.68, 30.47, 23.59, 22.15,
24.33, 27.1, 23.47, 19.66, 28.27, 22.54, 20.35, 17.61, 25.65,
22.29, 25.45, 23.58, 24.25, 19.64, 24.88, 26.84, 28.6, 29.64,
23.01, 20.13, 23.51, 29.35, 28.61, 33.29, 33.8, 22.16, 34.55,
24.04, 21.16, 45.8, 30.58, 26.52, 32.51, 22.49, 26.03, 29.35,
22.73, 23.89, 38.46, 28.56, 31.56, 25.42, 18.23, 24.8, 27.38,
28.55, 22.7, 28.57, 29.33),
AGE = c(39, 46, 48, 61, 46, 43, 63,
45, 52, 43, 50, 43, 46, 41, 39, 38, 48, 46, 38, 41, 42, 43, 52,
52, 44, 47, 60, 35, 61, 60, 36, 43, 40, 59, 61, 62, 54, 37, 56,
52, 42, 36, 43, 41, 52, 54, 53, 49, 65, 46, 63, 36, 63, 51, 47,
62, 39, 46, 54, 49, 44, 40, 56, 67, 53, 57, 57, 63, 62, 38, 47,
52, 63, 42, 37, 41, 44, 59, 44, 44, 45, 41, 60, 39, 53, 52, 61,
36, 62, 61, 41, 62, 41, 53, 39, 51, 66, 52, 60, 65), SEX = structure(c(2L,
1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L,
1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 2L, 2L,
1L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L,
2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 2L,
1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L,
2L, 2L, 1L), .Label = c("2", "1"), class = "factor")), row.names = c(NA,
100L), .Names = c("BMI", "AGE", "SEX"), class = "data.frame")
# Import
bmi- read_xlsx("bmi.xlsx")
setwd("~/GitHub/officegeek_excel_til_r/data")
# Import
bmi- read_xlsx("bmi.xlsx")
# Import
bm <- read_xlsx("bmi.xlsx")
# Import
library(readxl)
bmi <- read_xlsx("bmi.xlsx")
# Plot
library(ggplot2)
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi))
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi, color=kon))
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi, color=kon)) +
geom_smoothmapping = aes(x=alder, y=bmi, color=kon))
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi, color=kon)) +
geom_smooth(mapping = aes(x=alder, y=bmi, color=kon))
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi)) +
geom_smooth(mapping = aes(x=alder, y=bmi))
ggplot(data=issalg) +
geom_point(mapping = aes(x=Temperatur, y=Salg, color=Butik_Placering, size=Salg)) +
geom_smooth(mapping = aes(x=Temperatur, y=Salg, color=Butik_Placering), se=FALSE) +
geom_hline(yintercept = mean(issalg$Salg)) +
annotate("text", label="Middel Salg", x=15, vjust = 0, y=mean(issalg$Salg+200)) +
geom_vline(xintercept = mean(issalg$Temperatur)) +
annotate("text", label="Middel Temperatur", y=100, hjust = 0, x=mean(issalg$Temperatur-0.5), angle = 90) +
theme(panel.background = element_blank()) +
theme(plot.background = element_blank()) +
scale_x_continuous(name="Temperatur") +
scale_y_continuous(name="Total Salg") +
scale_color_discrete(name="Placering af butiken") +
scale_size_continuous(name="Salg") +
theme_classic()
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi, color=kon)) +
geom_smooth(mapping = aes(x=alder, y=bmi, color=kon))
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi)) +
geom_smooth(mapping = aes(x=alder, y=bmi))
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi, color=kon)) +
geom_smooth(mapping = aes(x=alder, y=bmi, color=kon))
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi)) +
geom_smooth(mapping = aes(x=alder, y=bmi))
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi, size=bmi)) +
geom_smooth(mapping = aes(x=alder, y=bmi))
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi, color= kon, size=bmi)) +
geom_smooth(mapping = aes(x=alder, y=bmi))
ggplot(bmi) +
geom_point(mapping = aes(x=alder, y=bmi, color=kon, size=bmi)) +
geom_smooth(mapping = aes(x=alder, y=bmi, color=kon))
ggplot(bmi) +
geom_boxplot(mapping = bmi)
geom_boxplot(mapping = aes(x=alder, y=bmi)
geom_boxplot(mapping = aes(x=alder, y=bmi)
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi))
ggplot(bmi) +
geom_jitter(mapping = aes(x=alder, y=bmi))
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi)) +
geom_jitter(mapping = aes(x=alder, y=bmi))
bmi
bmi + coord_flip()
bmi
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi)) +
geom_jitter(mapping = aes(x=alder, y=bmi)) +
coord_flip()
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi)) +
geom_jitter(mapping = aes(x=alder, y=bmi))
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi)) +
geom_jitter(mapping = aes(x=alder, y=bmi)) +
coord_flip()
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi)) +
geom_jitter(mapping = aes(x=alder, y=bmi))
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi)) +
geom_jitter(mapping = aes(x=alder, y=bmi)) +
coord_flip()
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi), outlier.colour = "red") +
geom_jitter(mapping = aes(x=alder, y=bmi)) +
coord_flip()
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi), outlier.colour = "red") +
geom_jitter(mapping = aes(x=alder, y=bmi)) +
coord_flip()
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi)) +
geom_jitter(mapping = aes(x=alder, y=bmi), outlier.colour = "red") +
coord_flip()
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi), outlier.colour = "red")
ggplot(bmi) +
geom_boxplot(mapping = aes(x=alder, y=bmi), outlier.colour = "red") +
coord_flip()
test <-  c(1, "test")
test2 <- c(1, 2, 3, 4)
test3 <- c(TRUE, FALSE)
test4 <-  c(TRUE, 23, "Tekst")
x <- 10
navn <- "Tue"
x <- 10
navn <- "Tue"
x
navn
x
navn
x <- 10
navn <- "Tue"
x
navn
demo(graphics)
# Funktioner
tal <-  c(1, 2, 3, 4, 5)
sum(tal)
mean(tal)
navn <- "Tue"
ls()   # Vis / List alle objekter
# Number
x <- 100
y <- 25.75
# Text
navn <- "Tue"
# Date Times
dagsdato = Sys.time()
dagsdato <- format(Sys.time(), %d-%m-%y)
dagsdato <- format(Sys.time(), "%d-%m-%y"")
# Logicals - TRUE/FALSE
# Missing value - NA
dagsdato <- format(Sys.time(), "%d-%m-%y"")
# Logicals - TRUE/FALSE
# Missing value - NA
dagsdato <- format(Sys.time(), "%d-%m-%y)
# Logicals - TRUE/FALSE
# Missing value - NA
dagsdato <- format(Sys.time(), "%d-%m-%y)
# Logicals - TRUE/FALSE
# Missing value - NA
dagsdato <- format(Sys.time(), "%d-%m-%y"))
dagsdato <- format(Sys.time(), "%d-%m-%y")
is.character(y)
is.character(navn)
# Logicals - TRUE/FALSE
is.numeric(x)
mindato <- as.data("2019-12-24")
mindato <- as.data.frame("2019-12-24")
mindato <- as.Date("2019-12-24")
mindato <- as.Data("22-JAN-2020", "")
mindato <- as.Data("22-JAN-2020", "%d-%b-%y")
mindato <- as.Date("2019-12-24")
mindato <- as.Date("2019-12-24")
mindato <- as.Date("22-JAN-2020", "%d-%b-%y")
mindato <- as.Date("24-12-2019", "%d-%m-%y")
mindato_1 <- as.Date("2019-12-24")
mindato_2 <- as.Date("22-JAN-2020", "%d-%b-%y")
mindato_3 <- as.Date("24-12-2019", "%d-%m-%y")
# Missing value - NA
typeof(x <-  NA)
x <- NA
typeof(x <-  NA)
# Missing value - NA
x <- NA
typeof(x <-  NA)
salgstal <-  c(120, NA, 110, 140, NA)
mean(salgstal)
mean(salgstal, na.rm = TRUE)
salgstal <- c(120, , 110, 140, )
salgstal <-  c(120, NA, 110, 140, NA)
# Factor
# Code to build factor_survey_vector
survey_vector <- c("M", "F", "F", "M", "M")
factor_survey_vector <- factor(survey_vector)
# Factor
# Code to build factor_survey_vector
survey_vector <- c("M", "K", "K", "M", "M")
factor_survey_vector <- factor(survey_vector)
# Specify the levels of factor_survey_vector
levels(factor_survey_vector) <-
factor_survey_vector
# Factor
# Code to build factor_survey_vector
mk <- c("M", "K", "K", "M", "M")
# Factor
# Code to build factor_survey_vector
mk <- c("M", "K", "K", "M", "M")
mk_vector <- factor(survey_vector)
mk_vector <- factor(survey_vector)
# Specify the levels of factor_survey_vector
levels(factor_survey_vector) <-
factor_survey_vector
# Specify the levels of factor_survey_vector
levels(mk_vector) <- mk_vector
# Factor
# Code to build factor_survey_vector
mk <- c("M", "K", "K", "M", "M")
mk_vector <- factor(survey_vector)
mk_vector <- factor(mk_vector)
mk_vector <- factor(mk)
# Specify the levels of factor_survey_vector
levels(mk_vector) <- mk_vector
# Factor
# Code to build factor_survey_vector
mk <- c("M", "K", "K", "M", "M")
mk_vector <- factor(mk)
# Factor
# Code to build factor_survey_vector
mk <- c("M", "K", "K", "M", "M")
mk_vector <- factor(mk)
# Specify the levels of factor_survey_vector
levels(mk_vector) <- mk_vector
# Factor
# Code to build factor_survey_vector
mk <- c("M", "K", "K", "M", "M")
mk_vector <- factor(mk)
# Specify the levels of factor_survey_vector
levels(mk_vector_2) <- mk_vector
# Specify the levels of factor_survey_vector
levels(mk_vector) <- mk_vector
mk_vector <- factor(mk)
# Specify the levels of factor_survey_vector
levels(mk_vector) <- mk_vector
mk_vector <- factor(mk)
# Specify the levels of factor_survey_vector
levels(mk_vector) <- mk_vector
# Specify the levels of factor_survey_vector
levels(mk_vector) <- c("Kvinde", "Mand")
# Factor
# Code to build factor_survey_vector
mk <- c("M", "K", "K", "M", "M")
# Factor
# Code to build factor_survey_vector
mk <- c("M", "K", "K", "M", "M")
mk_factor <- factor(mk)
levels(mk_factor) <- c("Mand, "Kvinde")
# Specify the levels of factor_survey_vector
levels(mk_vector) <- c("Kvinde", "Mand")
levels(mk_factor) <- c("Mand", "Kvinde")
# Specify the levels of factor_survey_vector
levels(mk_vector) <- c("Kvinde", "Mand")
# Factor
# Code to build factor_survey_vector
mk <- c("M", "K", "K", "M", "M")
mk_factor <- factor(mk)
levels(mk_factor) <- c("Mand", "Kvinde")
# Specify the levels of factor_survey_vector
levels(mk_vector) <- c("Kvinde", "Mand")
class(x)
# Number
x <- 10
class(x)
class(navn)
# Text
navn <- "Tue"
class(navn)
# Date Times
dagsdato <- Sys.time()
class(dagsdato)
class(mk_factor)
class(mk)
class(mk_factor)
nlevels(mk_factor)
print(27) # integer
my_double <- print(12.5) # double
my_double <- 12.5 # double
# Vector
my_character <- "abc" # character
my_integer <- 27 # integer
my_logical <- TRUE # logical
my_complex <- 2+3i # complex
my_raw <- charToRaw('hello') # raw
print(my_raw)
svar <-  c(1, "ja", 1, "Nej", 2)
value <- c(12, 45, 23, 45, 78)
# Vector
navne <- c("Ole", "Pia", "Kim", "Ole")
oms <- c(124, 345, 763, 456)
# Vector
saelger <- c("Ole", "Pia", "Kim", "Ole")
salg <- c(124, 345, 763, 456)
resultat <- saelger + salg
resultat <- data.frame(saelger, salg)
View(resultat)
# Date Times
dagsdato <- Sys.time()
# Vector
saelger <- c("Ole", "Pia", "Kim", "Ole", "Pia", "Pia", "Kim")
salg <- c(124, 345, 763, 456, 673, 349, 298)
dato <- c("2020-04-02", "2020-04-02", "2020-04-03", "2020-04-03", "2020-04-04", "2020-04-05", "2020-04-05")
# Vectores overført til dataframe
resultat <- data.frame(saelger, salg, dato)
View(resultat)
dato <- as.Date(c("2020-04-02", "2020-04-02", "2020-04-03", "2020-04-03", "2020-04-04", "2020-04-05", "2020-04-05"))
# Vectores overført til dataframe
resultat <- data.frame(saelger, salg, dato)
View(resultat)
# Salg
salg <- factor(saelger)
# Vectores overført til dataframe
resultat <- data.frame(saelger, salg, dato)
View(resultat)
# Vector
saelger <- c("Ole", "Pia", "Kim", "Ole", "Pia", "Pia", "Kim")
salg <- c(124, 345, 763, 456, 673, 349, 298)
dato <- as.Date(c("2020-04-02", "2020-04-02", "2020-04-03", "2020-04-03", "2020-04-04", "2020-04-05", "2020-04-05"))
# Vectores overført til dataframe
resultat <- data.frame(saelger, salg, dato)
# Salg
salg <- factor(saelger)
View(resultat)
class(mk)
# Factor
# M/K
mk <- c("M", "K", "K", "M", "M")
mk_factor <- factor(mk)
levels(mk_factor) <- c("Mand", "Kvinde")
class(mk)
class(mk_factor)
nlevels(mk_factor)
install.packages('tinytex')
library(tinytex)
# Demo løsninger
install.packages("Shiny")
# Demo løsninger
install.packages("shiny")
library(shiny)
runExample("03_reactivity")
runExample("11_timer")
runExample("05_sliders")
library(readxl)
library(ggplot2)
library(shiny)
dagsdato <- format(Sys.time(), "%a")
dagsdato
dagsdato <- format(Sys.time(), "%A")
dagsdato
dagsdato
dagsdato <- format(Sys.time(), "%b")
dagsdato
dagsdato <- format(Sys.time(), "%B")
dagsdato
class(dagsdato)
# Date Times
dagsdato <- Sys.time()
class(dagsdato)
dagsdato <- as.Date("2018-01-01")
weekdays(dagsdato)
dagsdato <- Sys.time()
weekdays(dagsdato)
# Eksempler
library(readxl)
order_details <- read_excel("northwind.xlsx",  sheet = "order_details")
setwd("~/GitHub/officegeek_excel_til_r/data")
order_details <- read_excel("northwind.xlsx",  sheet = "order_details")
order_details <- mutate(order_details, Total = Quantity * UnitPrice)
library(dplyr)
order_details <- read_excel("northwind.xlsx",  sheet = "order_details")
order_details <- mutate(order_details, Total = Quantity * UnitPrice)
View(order_details)
# mutate - nyt felt
northwind_samlet <- read_excel("northwind.xlsx",  sheet = "samlet")
# mutate - nyt felt
northwind_samlet <- read_excel("northwind.xlsx",  sheet = "samlet")
northwind_samlet <- mutate(northwind_samlet, Weekday = weekdays(ShippedDate))
northwind_samlet <- mutate(northwind_samlet, Total = Quantity * UnitPrice)
View(northwind_samlet)
# mutate - nyt felt
northwind_samlet <- read_excel("northwind.xlsx",  sheet = "samlet")
northwind_samlet <- mutate(northwind_samlet, Total = Quantity * UnitPrice)
northwind_samlet <- mutate(northwind_samlet, Weekday = weekdays(ShippedDate))
View(northwind_samlet)
# group By og summarise
northwind_samlet <- northwind_samlet %>%
select(Weekday, Total) %>%
group_by(Weekday) %>%
summarise(sum(Total))
northwind_samlet
# mutate - nyt felt
northwind_samlet <- read_excel("northwind.xlsx",  sheet = "samlet")
northwind_samlet <- mutate(northwind_samlet, Total = Quantity * UnitPrice)
northwind_samlet <- mutate(northwind_samlet, Weekday = weekdays(ShippedDate))
# filter
northwind_samlet <- filter(northwind_samlet, is.na(ShippedDate) == FALSE)
# group By og summarise
northwind_ugedag_salg <- northwind_samlet %>%
select(Weekday, Total) %>%
group_by(Weekday) %>%
summarise(sum(Total))
northwind_ugedag_salg
View(northwind_samlet)
# select
northwind_samlet <- select(northwind_samlet, Weekday, Total)
northwind_samlet
# select
northwind_ugedag_salg <- select(northwind_samlet, Weekday, Total)
northwind_ugedag_salg
# group By og summarise
northwind_ugedag_salg <- northwind_samlet %>%
select(Weekday, Total) %>%
group_by(Weekday) %>%
summarise(sum(Total))
northwind_ugedag_salg
# group By og summarise
northwind_ugedag_salg <- northwind_samlet %>%
is.na(ShippedDate) == FALSE %>%
select(Weekday, Total) %>%
group_by(Weekday) %>%
summarise(sum(Total))
northwind_ugedag_salg <- northwind_samlet %>%
mutate(Weekday = weekdays(ShippedDate)) %>%
filter(is.na(ShippedDate) == FALSE) %>%
select(Weekday, Total) %>%
group_by(Weekday) %>%
summarise(sum(Total))
# mutate - nyt felt
northwind_samlet <- read_excel("northwind.xlsx",  sheet = "samlet")
northwind_ugedag_salg <- northwind_samlet %>%
mutate(Total = Quantity * UnitPrice) %>%
mutate(Weekday = weekdays(ShippedDate)) %>%
filter(is.na(ShippedDate) == FALSE) %>%
select(Weekday, Total) %>%
group_by(Weekday) %>%
summarise(sum(Total))
northwind_ugedag_salg
# group By og summarise
northwind_ugedag_salg <- northwind_samlet %>%
group_by(Weekday) %>%
summarise(sum(Total))
# mutate - nyt felt
northwind_samlet <- read_excel("northwind.xlsx",  sheet = "samlet")
northwind_samlet <- mutate(northwind_samlet, Total = Quantity * UnitPrice)
northwind_samlet <- mutate(northwind_samlet, Weekday = weekdays(ShippedDate))
# filter
northwind_samlet <- filter(northwind_samlet, is.na(ShippedDate) == FALSE)
# select
northwind_ugedag_salg <- select(northwind_samlet, Weekday, Total)
# group By og summarise
northwind_ugedag_salg <- northwind_samlet %>%
group_by(Weekday) %>%
summarise(sum(Total))
northwind_ugedag_salg
# Alt med pipe %>%
northwind_ugedag_salg <- northwind_samlet %>%
mutate(Total = Quantity * UnitPrice) %>%
mutate(Weekday = weekdays(ShippedDate)) %>%
filter(is.na(ShippedDate) == FALSE) %>%
select(Weekday, Total) %>%
group_by(Weekday) %>%
summarise(sum(Total))
northwind_ugedag_salg
# Northwind data
northwind_samlet <- read_excel("northwind.xlsx",  sheet = "samlet")
# mutate - nyt felt
northwind_samlet <- mutate(northwind_samlet, Total = Quantity * UnitPrice)
northwind_samlet <- mutate(northwind_samlet, Weekday = weekdays(ShippedDate))
# filter
northwind_samlet <- filter(northwind_samlet, is.na(ShippedDate) == FALSE)
# select
northwind_ugedag_salg <- select(northwind_samlet, Weekday, Total)
northwind_ugedag_salg
northwind_samlet
